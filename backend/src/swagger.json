{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Personal Activity Manager API",
    "description": "Documentação da API"
  },
  "host": "localhost:3000",
  "basePath": "/",
  "tags": [
    {
      "name": "Activity",
      "description": "Activity endpoint"
    },
    {
      "name": "Category",
      "description": "Category endpoint"
    },
    {
      "name": "User",
      "description": "User endpoint"
    }
  ],
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/activity/{id}": {
      "get": {
        "tags": [
          "Activity"
        ],
        "description": "Endpoint that returns an activity by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID of the activity"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Activity"
            },
            "description": "Activity found"
          },
          "400": {
            "description": "Invalid ID",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Invalid activity ID"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Activity not found."
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "Activity not found."
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Activity"
        ],
        "description": "Endpoint that updates an activity by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID of the activity"
          },
          {
            "name": "obj",
            "in": "body",
            "description": "Updated activity data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateActivity"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Activity updated successfully",
            "schema": {
              "$ref": "#/definitions/Activity"
            }
          },
          "400": {
            "description": "Invalid ID",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Invalid activity ID"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Activity not found",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Activity not found"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Activity"
        ],
        "description": "Endpoint that deletes an activity by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID of the activity"
          }
        ],
        "responses": {
          "200": {
            "description": "Activity deleted successfully",
            "schema": {
              "$ref": "#/definitions/Activity"
            }
          },
          "400": {
            "description": "Invalid ID",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Invalid activity ID"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Activity not found",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Activity not found"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/activity/": {
      "post": {
        "tags": [
          "Activity"
        ],
        "description": "Endpoint that creates a new activity",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "Activity data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddActivity"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Activity created successfully",
            "schema": {
              "$ref": "#/definitions/Activity"
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/category/": {
      "get": {
        "tags": [
          "Category"
        ],
        "description": "Endpoint that returns all categories",
        "responses": {
          "200": {
            "description": "Categories found",
            "schema": {
              "$ref": "#/definitions/AllCategory"
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Category"
        ],
        "description": "Endpoint that creates a new category",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "Category data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddCategory"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Category created successfully",
            "schema": {
              "$ref": "#/definitions/Category"
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/category/{id}": {
      "put": {
        "tags": [
          "Category"
        ],
        "description": "Endpoint that updates a category by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID of the category"
          },
          {
            "name": "obj",
            "in": "body",
            "description": "Updated category data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateCategory"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Category updated successfully",
            "schema": {
              "$ref": "#/definitions/Category"
            }
          },
          "400": {
            "description": "Invalid ID",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Invalid category ID"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Category not found",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Category not found"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Category"
        ],
        "description": "Endpoint that deletes a category by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID of the category"
          }
        ],
        "responses": {
          "200": {
            "description": "Category deleted successfully",
            "schema": {
              "$ref": "#/definitions/Category"
            }
          },
          "400": {
            "description": "Invalid ID",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Invalid category ID"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Category not found",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Category not found"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/user/": {
      "get": {
        "tags": [
          "User"
        ],
        "description": "Endpoint that returns all users",
        "responses": {
          "200": {
            "description": "Users found",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "User"
        ],
        "description": "Endpoint that creates a new user",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "User data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddUser"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User created successfully",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/user/{id}": {
      "put": {
        "tags": [
          "User"
        ],
        "description": "Endpoint that updates a user by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID of the user"
          },
          {
            "name": "obj",
            "in": "body",
            "description": "Updated user data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User updated successfully",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Invalid ID",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Invalid user ID"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "User not found",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "User not found"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "User"
        ],
        "description": "Endpoint that deletes a user by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID of the user"
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Invalid ID",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Invalid user ID"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "User not found",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "User not found"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  },
  "definitions": {
    "Activity": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number",
          "example": 1
        },
        "description": {
          "type": "string",
          "example": "do the daw2 activity"
        },
        "dt_initial": {
          "type": "string",
          "example": "2024-06-04"
        },
        "dt_final": {
          "type": "string",
          "example": "2024-07-04"
        },
        "category_id": {
          "type": "number",
          "example": 1
        },
        "user_id": {
          "type": "number",
          "example": 1
        },
        "status": {
          "type": "string",
          "example": "true"
        }
      }
    },
    "AddActivity": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "example": "do the daw2 activity"
        },
        "dt_initial": {
          "type": "string",
          "example": "2024-06-04"
        },
        "dt_final": {
          "type": "string",
          "example": "2024-07-04"
        },
        "category_id": {
          "type": "number",
          "example": 1
        },
        "user_id": {
          "type": "number",
          "example": 1
        }
      },
      "required": [
        "description",
        "dt_initial",
        "dt_final",
        "category_id",
        "user_id"
      ]
    },
    "UpdateActivity": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "example": "do the daw2 activity"
        },
        "dt_initial": {
          "type": "string",
          "example": "2024-06-04"
        },
        "dt_final": {
          "type": "string",
          "example": "2024-07-04"
        },
        "category_id": {
          "type": "number",
          "example": 1
        },
        "status": {
          "type": "string",
          "example": "true"
        }
      }
    },
    "AllActivity": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1
          },
          "description": {
            "type": "string",
            "example": "do the daw2 activity"
          },
          "dt_initial": {
            "type": "string",
            "example": "2024-06-04"
          },
          "dt_final": {
            "type": "string",
            "example": "2024-07-04"
          },
          "category_id": {
            "type": "number",
            "example": 1
          },
          "user_id": {
            "type": "number",
            "example": 1
          },
          "status": {
            "type": "string",
            "example": "true"
          }
        }
      }
    },
    "Category": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number",
          "example": 1
        },
        "description": {
          "type": "string",
          "example": "college jobs"
        },
        "created_at": {
          "type": "string",
          "example": "2024-06-03"
        },
        "updated_at": {
          "type": "string",
          "example": "2024-06-03"
        },
        "status": {
          "type": "string",
          "example": "true"
        }
      }
    },
    "AllCategory": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1
          },
          "description": {
            "type": "string",
            "example": "college jobs"
          },
          "created_at": {
            "type": "string",
            "example": "2024-06-03"
          },
          "updated_at": {
            "type": "string",
            "example": "2024-06-03"
          },
          "status": {
            "type": "string",
            "example": "true"
          }
        }
      }
    },
    "AddCategory": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "example": "college jobs"
        },
        "created_at": {
          "type": "string",
          "example": "2024-06-03"
        },
        "updated_at": {
          "type": "string",
          "example": "2024-06-03"
        }
      },
      "required": [
        "description",
        "created_at",
        "updated_at"
      ]
    },
    "UpdateCategory": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "example": "college jobs"
        },
        "created_at": {
          "type": "string",
          "example": "2024-06-03"
        },
        "updated_at": {
          "type": "string",
          "example": "2024-06-03"
        },
        "status": {
          "type": "string",
          "example": "true"
        }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number",
          "example": 1
        },
        "first_name": {
          "type": "string",
          "example": "Luiz Felippe"
        },
        "last_name": {
          "type": "string",
          "example": "Brizola"
        },
        "password": {
          "type": "string",
          "example": "!22lf"
        },
        "status": {
          "type": "string",
          "example": "true"
        }
      }
    },
    "AddUser": {
      "type": "object",
      "properties": {
        "first_name": {
          "type": "string",
          "example": "Luiz Felippe"
        },
        "last_name": {
          "type": "string",
          "example": "Brizola"
        },
        "password": {
          "type": "string",
          "example": "!22lf"
        }
      },
      "required": [
        "first_name",
        "last_name",
        "password"
      ]
    },
    "UpdateUser": {
      "type": "object",
      "properties": {
        "first_name": {
          "type": "string",
          "example": "Luiz Felippe"
        },
        "last_name": {
          "type": "string",
          "example": "Brizola"
        },
        "password": {
          "type": "string",
          "example": "!22lf"
        },
        "status": {
          "type": "string",
          "example": "true"
        }
      }
    }
  }
}